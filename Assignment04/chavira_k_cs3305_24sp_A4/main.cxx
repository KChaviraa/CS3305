//  CS 3305
//  Test cases


#include "hashtable.h"

using namespace std;

    int keys1[] = {33, 10, 7, 13, 14, 46, 26, 35};
    size_t n1 = sizeof(keys1)/sizeof(keys1[0]);

    int keys2[] = {45, 78, 95, 35, 41, 44, 82, 34, 80, 84,  8, 59, 27, 24, 36, 92, 51, 16, 54, 33,  5, 19, 81, 25,  6};
    size_t n2 = sizeof(keys2)/sizeof(keys2[0]);

    int keys3[] = {};
    size_t n3 = sizeof(keys3)/sizeof(keys3[0]);


void test1() {
    hashtable h1(13);
    hashtable h2(13);
    hashtable h3(13);
    for (size_t i=0; i<n1; ++i) {
        h1.hash_lp(keys1[i]);
        h2.hash_qp(keys1[i]);
        h3.hash_dh(keys1[i]);
    }
    h1.print(1);
    h2.print(2);
    h3.print(3);
}

void test2() {
    hashtable h4;
    hashtable h5;
    hashtable h6;
    for (size_t i=0; i<n2; ++i) {
        h4.hash_lp(keys2[i]);
        h5.hash_qp(keys2[i]);
        h6.hash_dh(keys2[i]);
    }
    h4.print(4);
    h5.print(5);
    h6.print(6);
}

void test3() {
    hashtable h7(313);
    hashtable h8(313);
    hashtable h9(313);
    for (size_t i=0; i<n3; ++i) {
        h7.hash_lp(keys3[i]);
        h8.hash_qp(keys3[i]);
        h9.hash_dh(keys3[i]);
    }
    h7.print(7);
    h8.print(8);
    h9.print(9);
}

int main() {
    test1();
    test2();
    test3();
    return 0;
}
